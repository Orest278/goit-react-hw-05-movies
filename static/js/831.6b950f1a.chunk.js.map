{"version":3,"file":"static/js/831.6b950f1a.chunk.js","mappings":"+SAEMA,EAAO,gCACPC,EAAM,4CAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACoBC,EAAAA,EAAAA,GAAMH,EAAI,qBAA0BC,GADxD,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBL,EAAAA,EAAAA,GAAMH,EAAO,eAAiBC,EAAM,UAAYO,EAAQ,+BAD1E,cACCJ,EADD,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACoBP,EAAAA,EAAAA,GAAMH,EAAO,SAAWU,EAAUT,GADtD,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,wFACoBP,EAAAA,EAAAA,GAAMH,EAAO,SAAWU,EAAU,WAAaT,GADnE,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACoBV,EAAAA,EAAAA,GAAMH,EAAO,SAAWa,EAAK,WAAaZ,GAD9D,cACGG,EADH,yBAEIA,EAASC,KAAKS,MAFlB,kE,8ECQP,UA7BA,WACE,IAAQD,GAAOE,EAAAA,EAAAA,MAAPF,GACR,GAA4BG,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,WAAAR,EAAAA,EAAAA,IAAgBE,UAAhB,SAAqBO,KAAKF,EAC3B,GAAE,CAACL,EAAD,OAAKI,QAAL,IAAKA,OAAL,EAAKA,EAAQI,UAGd,4BACE,sCACA,wBACsB,KAAb,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQI,SACP,qEADD,OAGCJ,QAHD,IAGCA,OAHD,EAGCA,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASX,EAApB,EAAoBA,GAApB,OACV,2BACE,qCAAaU,MACb,6BAAKC,MAEL,mBACA,oBALOX,EADC,QAarB,C","sources":["components/API/movies-api.js","components/pages/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=457a0be892b7eaa9d80ace4b1a3dd2c6';\n\nexport async function fetchTrendingMovies() {\n    const response = await axios(BASE + `trending/movie/day` + KEY);\n    return response.data.results;\n};\n\nexport async function searchMovies(query) {\n  const response = await axios(BASE + 'search/movie' + KEY + '&query=' + query + '&page=1&include_adult=false');\n    return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n    const response = await axios(BASE + 'movie/' + movieId  +KEY);\n    return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n    const response = await axios(BASE + 'movie/' + movieId + '/reviews' + KEY);\n    return response.data.results;\n}\n\nexport async function getMovieCast(id) {\n    const response = await axios(BASE + 'movie/' + id + '/credits' + KEY);\n    return response.data.cast;\n}","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../API/movies-api';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [review, setReview] = useState(null);\n  useEffect(() => {\n    getMovieReviews(id)?.then(setReview);\n  }, [id, review?.length]);\n\n  return (\n    <div>\n      <h3>Reviews:</h3>\n      <ul>\n        {review?.length === 0 ? (\n          <p>We don't have any reviews for this movies</p>\n        ) : (\n          review?.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p> {content}</p>\n\n              <br />\n              <br />\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;"],"names":["BASE","KEY","fetchTrendingMovies","axios","response","data","results","searchMovies","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","id","cast","useParams","useState","review","setReview","useEffect","then","length","map","author","content"],"sourceRoot":""}