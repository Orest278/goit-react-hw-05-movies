{"version":3,"file":"static/js/357.1cb19ea0.chunk.js","mappings":"+SAEMA,EAAO,gCACPC,EAAM,4CAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACoBC,EAAAA,EAAAA,GAAMH,EAAI,qBAA0BC,GADxD,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBL,EAAAA,EAAAA,GAAMH,EAAO,eAAiBC,EAAM,UAAYO,EAAQ,+BAD1E,cACCJ,EADD,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACoBP,EAAAA,EAAAA,GAAMH,EAAO,SAAWU,EAAUT,GADtD,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,wFACoBP,EAAAA,EAAAA,GAAMH,EAAO,SAAWU,EAAU,WAAaT,GADnE,cACGG,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACoBV,EAAAA,EAAAA,GAAMH,EAAO,SAAWa,EAAK,WAAaZ,GAD9D,cACGG,EADH,yBAEIA,EAASC,KAAKS,MAFlB,kE,8ECOP,UA3Ba,WACb,IAAQD,GAAOE,EAAAA,EAAAA,MAAPF,GACN,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,WAAAP,EAAAA,EAAAA,IAAaC,UAAb,SAAkBO,KAAKF,EACxB,GAAE,CAACL,IAGA,CAAEI,MAAAA,KAAW,4BACb,mCACA,+BACGA,QADH,IACGA,OADH,EACGA,EAAOI,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACV,2BACM,gBACIC,MAAO,IACbC,IAAG,yCAAoCJ,GACvCK,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeC,OAPRX,EADC,QAcnB,C","sources":["components/API/movies-api.js","components/pages/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=457a0be892b7eaa9d80ace4b1a3dd2c6';\n\nexport async function fetchTrendingMovies() {\n    const response = await axios(BASE + `trending/movie/day` + KEY);\n    return response.data.results;\n};\n\nexport async function searchMovies(query) {\n  const response = await axios(BASE + 'search/movie' + KEY + '&query=' + query + '&page=1&include_adult=false');\n    return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n    const response = await axios(BASE + 'movie/' + movieId  +KEY);\n    return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n    const response = await axios(BASE + 'movie/' + movieId + '/reviews' + KEY);\n    return response.data.results;\n}\n\nexport async function getMovieCast(id) {\n    const response = await axios(BASE + 'movie/' + id + '/credits' + KEY);\n    return response.data.cast;\n}","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"../API/movies-api\";\n\n\nconst Cast = () => {\nconst { id } = useParams();\n  const [casts, setCasts] = useState(null);\n  useEffect(() => {\n    getMovieCast(id)?.then(setCasts);\n  }, [id]);\n\n  return (\n      { casts } && <div>\n      <h2>Cast:</h2>\n      <ul>\n        {casts?.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n                <img\n                    width={100}\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE","KEY","fetchTrendingMovies","axios","response","data","results","searchMovies","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","id","cast","useParams","useState","casts","setCasts","useEffect","then","map","profile_path","name","character","width","src","alt"],"sourceRoot":""}