{"version":3,"file":"static/js/334.966d7f31.chunk.js","mappings":"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","sources":["components/API/movies-api.js","components/pages/Cast.jsx","components/pages/MovieDetails.jsx","components/pages/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=457a0be892b7eaa9d80ace4b1a3dd2c6';\n\nexport async function fetchTrendingMovies() {\n    const response = await axios(BASE + `trending/movie/day` + KEY);\n    return response.data.results;\n};\n\nexport async function searchMovies(query) {\n  const response = await axios(BASE + 'search/movie' + KEY + '&query=' + query + '&page=1&include_adult=false');\n    return response.data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n    const response = await axios(BASE + 'movie/' + movieId  +KEY);\n    return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n    const response = await axios(BASE + 'movie/' + movieId + '/reviews' + KEY);\n    return response.data.results;\n}\n\nexport async function getMovieCast(id) {\n    const response = await axios(BASE + 'movie/' + id + '/credits' + KEY);\n    return response.data.cast;\n}","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"../API/movies-api\";\n\n\nconst Cast = () => {\nconst { id } = useParams();\n  const [casts, setCasts] = useState(null);\n  useEffect(() => {\n    getMovieCast(id)?.then(setCasts);\n  }, [id]);\n\n  return (\n      { casts } && <div>\n      <h2>Cast:</h2>\n      <ul>\n        {casts?.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n                <img\n                    width={100}\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useParams, Link, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"../API/movies-api\";\nimport Cast from \"./Cast\";\nimport Reviews from \"./Reviews\";\n\nexport const MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movieData = await getMovieDetails(id);\n      setMovie(movieData);\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  const location = useLocation();\n  const comeBack = useRef(location.state?.from || \"/\");\n\n  const handleCastClick = () => {\n    setShowCast(!showCast);\n    setShowReviews(false);\n  };\n\n  const handleReviewsClick = () => {\n    setShowReviews(!showReviews);\n    setShowCast(false);\n  };\n\n  if (!movie) {\n    return <p>Loading movie details...</p>;\n  }\n\n  const { title, overview, release_date, vote_average, poster_path } = movie;\n\n  return (\n    <div>\n      <Link to={comeBack.current}>Go back</Link>\n      <h2>{title}</h2>\n      <img\n        width={200}\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        alt={title}\n      />\n      <p>Overview: {overview}</p>\n      <p>Release Date: {release_date}</p>\n      <p>Vote Average: {vote_average}</p>\n\n      <p>Additional information:</p>\n      <ul>\n        <li>\n          <button onClick={handleCastClick}>Cast</button>\n        </li>\n        <li>\n          <button onClick={handleReviewsClick}>Reviews</button>\n        </li>\n      </ul>\n\n      {showCast && (\n        <div>\n          <Cast />\n        </div>\n      )}\n\n      {showReviews && (\n        <div>\n          <Reviews />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../API/movies-api';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [review, setReview] = useState(null);\n  useEffect(() => {\n    getMovieReviews(id)?.then(setReview);\n  }, [id, review?.length]);\n\n  return (\n    <div>\n      <h3>Reviews:</h3>\n      <ul>\n        {review?.length === 0 ? (\n          <p>We don't have any reviews for this movies</p>\n        ) : (\n          review?.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p> {content}</p>\n\n              <br />\n              <br />\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;"],"names":["BASE","KEY","fetchTrendingMovies","axios","response","data","results","searchMovies","query","getMovieDetails","movieId","getMovieReviews","getMovieCast","id","cast","useParams","useState","casts","setCasts","useEffect","then","map","profile_path","name","character","width","src","alt","MovieDetails","movie","setMovie","showCast","setShowCast","showReviews","setShowReviews","fetchMovieDetails","movieData","location","useLocation","comeBack","useRef","state","from","title","overview","release_date","vote_average","poster_path","to","current","onClick","review","setReview","length","author","content"],"sourceRoot":""}